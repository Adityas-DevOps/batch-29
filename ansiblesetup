sudo -i
apt-get update
apt install docker.io -y


docker run -itd --name ansible_master ubuntu /bin/bash
docker run -itd --name target1 ubuntu /bin/bash
docker run -itd --name target2 ubuntu /bin/bash


root@practical26:~# docker ps
CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS          PORTS     NAMES
1d8b3bb36bec   ubuntu    "/bin/bash"   9 seconds ago    Up 8 seconds              target2
b936bc459139   ubuntu    "/bin/bash"   21 seconds ago   Up 21 seconds             target1
1b34f7b66568   ubuntu    "/bin/bash"   56 seconds ago   Up 55 seconds             ansible_master

----------------------

docker exec -it ansible_master bash
apt update
apt install python-is-python3 ansible vim iputils-ping openssh-client -y
        Geographical area 6 city 44
ansible --version
ansible 2.10.8

not get the conf file 

config file = None

--------------------manual steps to fix above issue ----------

 apt remove ansible -y
 apt update
 apt install software-properties-common
 add-apt-repository --yes --update ppa:ansible/ansible
 
apt install ansible

config file = /etc/ansible/ansible.cfg

---------------------------------


Part 3 Setup n number of target machines (2)/ container(2)Login to Target and setup target 1 

Step 5  Login to target 1 
docker exec -it target1 bash

Step 6 Update and install SSH and required dependencies 
apt update
apt install vim python-is-python3 iputils-ping openssh-client -y
apt-get install openssh-client openssh-server -y
Geographical area 6 city 44

Step 7 edit sshd_config to allow SSH and root login as ansible requires

cd /etc/ssh 
vi sshd_config
uncomment the parameter and modify the permission to yes PermitRootLogin yes and PasswordAuthentication yes

-----------------done -----------------------


Step 8 Start the service ssh if its not running
service ssh status
service ssh start 
service ssh status  

-----------------------

Step 9 change the root password to admin 
passwd root
Admin
Admin
--------------------------



Part 4 Perform the same all steps with target 2 and so on
Step 10 


Part 5  Find the IP’s of all targets container  for adding in ansible host file 
Come out to docker node and run the command 

Step 11
sudo docker inspect target1 ---  172.17.0.3
sudo docker inspect target2 


You will find the IPAddress like 172.17.0.3


172.17.0.3  target 1 

---------------

Part 6 setup ansible_master for ssh connectivity  and adding IP’s in hostfile


Step 12  go to ansible_master

docker exec -it ansible_master bash

Step 13 edit ansible host file and provide the target IP’s
cd /etc/ansible/
ls
Go to hosts file   
provide the IP of the target machines   like 172.17.0.3


-----------------


Step 14 verify as you are able to ping target machine from ansible_master

Ping  <Target machine IP>

ping 172.17.0.3


------------------

go back to master machine

Step 15 
generate the ssh key from the ssh-keygen command 

ssh-keygen
provide 3 times enter    (1 location verification + 2 time for passwd )





ssh-copy-id root@172.17.0.3


ssh root@172.17.0.3
----------------

manually

checking nginx  target 1

root@b936bc459139:~# service nginx status
nginx: unrecognized service
root@b936bc459139:~# 


---------after playbook run 

root@practical26:~# docker exec -it target1 bash
root@b936bc459139:/# service nginx status
 * nginx is not running
 
 
--------------------------
playbkk 2  

unsattaltion     

---
- hosts: all
  tasks:
    - name: ensure nginx is not installed
      apt: name=nginx state=absent




---
- hosts: all
  tasks:
    - name: ensure nginx is at the latest version
      apt: name=nginx state=latest
	  ansible-playbook  file.yaml
	  
	  
	  -------------



---------------------

---
- hosts: webservers
  tasks:
    - name: ensure nginx is not installed
      apt: name=nginx state=absent---
- hosts: all
  tasks:
    - name: ensure nginx is not installed
      apt: name=nginx state=absent
      
      
      ---------------
      
      
      infera setupp -- 1 time ctivity -- DevOps--
      
      playbook -- devops  or 
      
      
      
      roles
      
      ansible-playbook ansibleplaybookwithroles/openjdk8.yml
      
---main.yaml
- hosts: webservers
  roles:
    - openjdk8
    - kubernetes


----   roles 

---main.yaml
- name: Update all packages to the latest version
  become: true
  apt:
    upgrade: dist

- name: Install openjdk-8-jdk
  become: true
  apt:
    name: openjdk-8-jdk
    state: latest 
    
    
    
    -------------
    
    ansible-galaxy init 
    
 satish
|-- README.md
|-- defaults
|   `-- main.yml
|-- files
|-- handlers
|   `-- main.yml
|-- meta
|   `-- main.yml
|-- tasks
|   `-- main.yml
---
- name: Update all packages to the latest version
  become: true
  apt:
    upgrade: dist

- name: Install openjdk-8-jdk
  become: true
  apt:
    name: openjdk-8-jdk
    state: latest
    ---
- name: Update all packages to the latest version
  become: true
  apt:
    upgrade: dist

- name: Install openjdk-8-jdk
  become: true
  apt:
    name: openjdk-8-jdk
    state: latest
|-- templates
|-- tests
|   |-- inventory
|   `-- test.yml
`-- vars
    `-- main.yml   
    
      
      
      
